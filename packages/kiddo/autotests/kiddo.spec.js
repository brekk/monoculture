// This test automatically generated by doctor-general.
// Sourced from 'kiddo.js', edits to this file may be erased.
import { signal, exec } from '../kiddo'

import { fork } from 'fluture'
test('exec', done => {
  const blah = Math.round(Math.random() * 100000)
  fork(done)(z => {
    expect(z.stdout).toEqual('' + blah)
    done()
  })(exec('echo', [blah]))
})

import { pipe, map } from 'ramda'
import { readFile } from 'file-system'
test('signal', done => {
  const cancel = () => {}
  pipe(
    signal(cancel, { text: 'Reading file...', successText: 'Read file!' }),
    map(JSON.parse),
    fork(done)(raw => {
      expect(raw.name).toEqual('kiddo')
      done()
    })
  )(readFile('./package.json'))
})
